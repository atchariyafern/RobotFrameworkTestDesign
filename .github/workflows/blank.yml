# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    test:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v2
        - name: Execute tests
          uses: joonvena/robotframework-docker-action@v0.1
          env:
            BROWSER: chrome
            ROBOT_TESTS_DIR: ${{ github.workspace }}
#             ROBOT_REPORTS_DIR: ${{ github.workspace }}/reports
        - name: Upload test results
          uses: actions/upload-artifact@v1
          if: always()
          with:
            name: reports
            path: ${{ github.workspace }}
#     build-and-test:
#         name: "Build and Test"
#         runs-on: macos-latest
#         steps:
#           - uses: actions/checkout@v2
#           - name: Execute tests
#             uses: joonvena/robotframework-docker-action@v0.1
#             env:
#               BROWSER: chrome
#               ROBOT_TESTS_DIR: ${{ github.workspace }}
#           - name: Upload Unit Test Results
#             if: always()
#             uses: actions/upload-artifact@v2
#             with:
#               name: Unit Test Results
#               path: ${{ github.workspace }}*.xml
              
    unit-test-results:
      name: Unit Test Results
      runs-on: ubuntu-latest
      if: >
        github.event.workflow_run.conclusion != 'skipped' && (
          github.event.sender.login == 'dependabot[bot]' ||
          github.event.workflow_run.head_repository.full_name != github.repository
        )

      steps:
        - name: Download and Extract Artifacts
          env:
            GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          run: |
             mkdir -p artifacts && cd artifacts

             artifacts_url=${{ github.workspace }}
             gh api "$artifacts_url" -q '.artifacts[] | [.name, .archive_download_url] | @tsv' | while read artifact
             do
               IFS=$'\t' read name url <<< "$artifact"
               gh api $url > "$name.zip"
               unzip -d "$name" "$name.zip"
             done

        - name: Publish Unit Test Results
          uses: EnricoMi/publish-unit-test-result-action@v1
          with:
            commit: ${{ github.event.workflow_run.head_sha }}
            files: "artifacts/**/*.xml"



  #         - name: Upload test results
  #           uses: actions/upload-artifact@v1
  #           if: always()
  #           with:
  #             name: reports
  #             path: ${{ github.workspace }}


